public class BankAccount {
    private double balance;

    // Constructor to initialize balance
    public BankAccount(double initialBalance) {
        if (initialBalance >= 0) {
            this.balance = initialBalance;
        } else {
            System.out.println("Initial balance cannot be negative. Setting balance to 0.");
            this.balance = 0;
        }
    }

    // Get the current balance
    public double getBalance() {
        return balance;
    }

    // Deposit money into the account
    public void deposit(double amount) {
        if (amount > 0) {
            balance += amount;
            System.out.println("Successfully deposited $" + amount);
        } else {
            System.out.println("Invalid deposit amount.");
        }
    }

    // Withdraw money from the account
    public boolean withdraw(double amount) {
        if (amount > 0 && amount <= balance) {
            balance -= amount;
            System.out.println("Successfully withdrew $" + amount);
            return true;
        } else if (amount > balance) {
            System.out.println("Insufficient balance for this transaction.");
            return false;
        } else {
            System.out.println("Invalid withdrawal amount.");
            return false;
        }
    }
}


import java.util.Scanner;

public class ATM {
    private BankAccount account;
    private Scanner scanner;

    // Constructor to initialize the ATM with a bank account
    public ATM(BankAccount account) {
        this.account = account;
        this.scanner = new Scanner(System.in);
    }

    // Display the ATM menu and handle user input
    public void start() {
        while (true) {
            System.out.println("\n=== Welcome to the ATM ===");
            System.out.println("1. Check Balance");
            System.out.println("2. Deposit");
            System.out.println("3. Withdraw");
            System.out.println("4. Exit");
            System.out.print("Please choose an option: ");

            int choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    checkBalance();
                    break;
                case 2:
                    deposit();
                    break;
                case 3:
                    withdraw();
                    break;
                case 4:
                    exit();
                    return;
                default:
                    System.out.println("Invalid option. Please try again.");
            }
        }
    }

    // Method to check the account balance
    private void checkBalance() {
        System.out.println("Your current balance is: $" + account.getBalance());
    }

    // Method to handle deposits
    private void deposit() {
        System.out.print("Enter the amount to deposit: $");
        double amount = scanner.nextDouble();

        if (amount > 0) {
            account.deposit(amount);
        } else {
            System.out.println("Invalid amount. Deposit failed.");
        }
    }

    // Method to handle withdrawals
    private void withdraw() {
        System.out.print("Enter the amount to withdraw: $");
        double amount = scanner.nextDouble();

        if (amount > 0) {
            boolean success = account.withdraw(amount);
            if (!success) {
                System.out.println("Withdrawal failed. Please try again.");
            }
        } else {
            System.out.println("Invalid amount. Withdrawal failed.");
        }
    }

    // Method to exit the ATM system
    private void exit() {
        System.out.println("Thank you for using the ATM. Have a great day!");
        scanner.close();
    }
}

public class Main {
    public static void main(String[] args) {
        // Initialize the user's bank account with an initial balance
        BankAccount userAccount = new BankAccount(1000.00);

        // Create an ATM instance with the user's bank account
        ATM atm = new ATM(userAccount);

        // Start the ATM interface
        atm.start();
    }
}




OUTPUT:

=== Welcome to the ATM ===
1. Check Balance
2. Deposit
3. Withdraw
4. Exit
Please choose an option: 1
Your current balance is: $1000.0

=== Welcome to the ATM ===
1. Check Balance
2. Deposit
3. Withdraw
4. Exit
Please choose an option: 2
Enter the amount to deposit: $200
Successfully deposited $200.0

=== Welcome to the ATM ===
1. Check Balance
2. Deposit
3. Withdraw
4. Exit
Please choose an option: 3
Enter the amount to withdraw: $500
Successfully withdrew $500.0

=== Welcome to the ATM ===
1. Check Balance
2. Deposit
3. Withdraw
4. Exit
Please choose an option: 4
Thank you for using the ATM. Have a great day!

